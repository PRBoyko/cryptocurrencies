[{"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\index.js":"1","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\App\\index.js":"2","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\App\\App.js":"3","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\MainPage\\Main.js":"4","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\FavoriteTable\\index.js":"5","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\DetailedInfo\\index.js":"6","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\store.js":"7","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\actions\\actions.js":"8","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\services\\getData.js":"9","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\FavoriteTable\\FavoriteTable.js":"10","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\DetailedInfo\\DetailedInfo.js":"11","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\CryptoTable\\index.js":"12","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\reducers\\reducer.js":"13","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\constants\\API.js":"14","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\services\\getDetailedData.js":"15","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\CryptoTable\\CryptoTable.js":"16","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\ButtonForFilter\\index.js":"17","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\TableCell\\index.js":"18","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\constants\\checkboxes.js":"19","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\ButtonForFilter\\ButtonForFilter.js":"20","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\TableCell\\TableCell.js":"21","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\ItemStatus\\index.js":"22","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\Favorite\\index.js":"23","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\ItemStatus\\ItemStatus.js":"24","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\Favorite\\Favorite.js":"25"},{"size":315,"mtime":1612712328594,"results":"26","hashOfConfig":"27"},{"size":47,"mtime":1612710914891,"results":"28","hashOfConfig":"27"},{"size":551,"mtime":1612710914891,"results":"29","hashOfConfig":"27"},{"size":568,"mtime":1612729688246,"results":"30","hashOfConfig":"27"},{"size":77,"mtime":1612710914898,"results":"31","hashOfConfig":"27"},{"size":74,"mtime":1612710914895,"results":"32","hashOfConfig":"27"},{"size":141,"mtime":1612707944200,"results":"33","hashOfConfig":"27"},{"size":601,"mtime":1612717710790,"results":"34","hashOfConfig":"27"},{"size":790,"mtime":1612710914907,"results":"35","hashOfConfig":"27"},{"size":371,"mtime":1612730961699,"results":"36","hashOfConfig":"27"},{"size":2201,"mtime":1612710914894,"results":"37","hashOfConfig":"27"},{"size":71,"mtime":1612710914894,"results":"38","hashOfConfig":"27"},{"size":837,"mtime":1612730687915,"results":"39","hashOfConfig":"27"},{"size":55,"mtime":1612710914905,"results":"40","hashOfConfig":"27"},{"size":962,"mtime":1612710914907,"results":"41","hashOfConfig":"27"},{"size":5805,"mtime":1612730884673,"results":"42","hashOfConfig":"27"},{"size":83,"mtime":1612710914892,"results":"43","hashOfConfig":"27"},{"size":65,"mtime":1612710914904,"results":"44","hashOfConfig":"27"},{"size":183,"mtime":1612710914905,"results":"45","hashOfConfig":"27"},{"size":475,"mtime":1612710914892,"results":"46","hashOfConfig":"27"},{"size":238,"mtime":1612710914904,"results":"47","hashOfConfig":"27"},{"size":67,"mtime":1612710914901,"results":"48","hashOfConfig":"27"},{"size":62,"mtime":1612710914897,"results":"49","hashOfConfig":"27"},{"size":514,"mtime":1612710914901,"results":"50","hashOfConfig":"27"},{"size":293,"mtime":1612710914896,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cfht7w",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\index.js",[],["105","106"],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\App\\index.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\App\\App.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\MainPage\\Main.js",["107"],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\FavoriteTable\\index.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\DetailedInfo\\index.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\store.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\actions\\actions.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\services\\getData.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\FavoriteTable\\FavoriteTable.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\DetailedInfo\\DetailedInfo.js",["108"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FadeLoader } from \"react-spinners\";\r\n\r\nimport { getDetailedData } from \"../../services/getDetailedData\";\r\nimport TableCell from \"../TableCell\";\r\nimport ButtonForFilter from \"../ButtonForFilter\";\r\n\r\nimport { useParams } from \"react-router\";\r\nimport \"./detailed-info.css\";\r\n\r\nconst DetailedInfo = () => {\r\n  const [setData, setcurrencyData] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await getDetailedData(id);\r\n\r\n      if (data) {\r\n        setcurrencyData(data);\r\n      }\r\n    };\r\n    setLoaded(true);\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Link className=\"remove-decoration\" to=\"/\">\r\n        <ButtonForFilter btnText={\"Show all\"} />\r\n      </Link>\r\n\r\n      {!loaded ? (\r\n        <div className=\"center-loader \">\r\n          <FadeLoader color={\"#4336D7\"} />\r\n        </div>\r\n      ) : (\r\n        <table className=\"center\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <TableCell data=\"Open\" />\r\n              </th>\r\n              <th>\r\n                <TableCell data=\"High\" />\r\n              </th>\r\n              <th>\r\n                <TableCell data=\"Low\" />\r\n              </th>\r\n              <th>\r\n                <TableCell data=\"Close\" />\r\n              </th>\r\n              <th>\r\n                <TableCell data=\"Volume\" />\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>\r\n                <TableCell data={setData.open} />\r\n              </th>\r\n              <th>\r\n                <TableCell data={setData.high} />\r\n              </th>\r\n              <th>\r\n                <TableCell data={setData.low} />\r\n              </th>\r\n              <th>\r\n                <TableCell data={setData.close} />\r\n              </th>\r\n              <th>\r\n                <TableCell data={setData.volume} />\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailedInfo;\r\n","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\CryptoTable\\index.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\reducers\\reducer.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\constants\\API.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\services\\getDetailedData.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\CryptoTable\\CryptoTable.js",["109","110"],"import React from \"react\";\nimport { FadeLoader } from \"react-spinners\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport ItemStatus from \"../ItemStatus\";\nimport TableCell from \"../TableCell\";\nimport Favorite from \"../Favorite\";\nimport ButtonForFilter from \"../ButtonForFilter\";\nimport * as actions from \"../../actions/actions\";\n\nimport \"./crypto-table.css\";\n\nconst CryptoTable = (props) => {\n  const {\n    currencyData,\n    changeFavoriteItem,\n    filter,\n    setFilter,\n    favorite,\n    loaded,\n    changeColumns,\n    setChangeColumns,\n    showCheckboxColumn,\n    setshowCheckboxColumn,\n  } = props;\n\n  const changeFavorite = (id) => {\n    const data = currencyData.map((item) => {\n      if (id === item.id) {\n        item.onFavorite = !item.onFavorite;\n      }\n      return item;\n    });\n    localStorage.setItem(\n      \"favorite\",\n      JSON.stringify(data.filter((item) => item.onFavorite))\n    );\n    changeFavoriteItem(data);\n  };\n\n  const filterItems = (items) => {\n    if (favorite) {\n      return items.filter((item) => item.onFavorite);\n    } else {\n      return items;\n    }\n  };\n\n  const visibleItems = filterItems(currencyData);\n\n  const saveData = () => {\n    let checkStatus = showCheckboxColumn.map((item) => item.isChecked);\n    setChangeColumns(changeColumns);\n\n    if (Array.from(document.querySelectorAll(\"input\")).length < 1) {\n      setshowCheckboxColumn(showCheckboxColumn);\n    } else {\n      checkStatus = Array.from(document.querySelectorAll(\"input\")).map(\n        (item) => {\n          if (item[\"checked\"]) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      );\n\n      const newCheck = showCheckboxColumn.map((item, index) => {\n        showCheckboxColumn[index].isChecked = checkStatus[index];\n\n        return item;\n      });\n      setshowCheckboxColumn(newCheck);\n    }\n  };\n\n  const showStars = () => {\n    return (\n      showCheckboxColumn\n        .map((item) => item.isChecked)\n        .filter((item) => item !== false).length > 0\n    );\n    return true;\n  };\n\n  return (\n    <div>\n      <ItemStatus\n        filter={filter}\n        onFilterChange={(filter) => setFilter(filter)}\n      />\n      {!loaded ? (\n        <div className=\"center-loader\">\n          <FadeLoader color={\"#4336D7\"} />\n        </div>\n      ) : (\n        <div>\n          <table className=\"center\">\n            <thead>\n              <tr>\n                {showStars() && <th className=\"border-off\"></th>}\n                {showCheckboxColumn[0].isChecked && (\n                  <th className=\"cell-size\">\n                    <TableCell data=\"Slug\" />\n                  </th>\n                )}\n                {showCheckboxColumn[1].isChecked && (\n                  <th className=\"cell-size\">\n                    <TableCell data=\"Symbol\" />\n                  </th>\n                )}\n                {showCheckboxColumn[2].isChecked && (\n                  <th className=\"cell-size\">\n                    <TableCell data=\"Price_USD\" />\n                  </th>\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {visibleItems.map((item) => {\n                return (\n                  <tr key={item.id}>\n                    <td className=\"border-off\">\n                      {showStars() && (\n                        <Favorite\n                          id={item.id}\n                          style={\n                            item.onFavorite\n                              ? { color: \"yellow\" }\n                              : { color: \"grey\" }\n                          }\n                          changeFavorite={changeFavorite}\n                        />\n                      )}\n                    </td>\n                    {showCheckboxColumn[0].isChecked && (\n                      <td className=\"cell-size cursor-pointer\">\n                        <Link to={`/detailed/${item.id}`}>\n                          <TableCell data={item.slug.toUpperCase()} />\n                        </Link>\n                      </td>\n                    )}\n                    {showCheckboxColumn[1].isChecked && (\n                      <td className=\"cell-size\">\n                        <TableCell data={item.symbol} />\n                      </td>\n                    )}\n                    {showCheckboxColumn[2].isChecked && (\n                      <td className=\"cell-size\">\n                        <TableCell data={item.metrics} />\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n\n              {changeColumns ? (\n                <tr>\n                  <td className=\"border-off\"></td>\n                  {showCheckboxColumn.map((item) => {\n                    const { name, isChecked } = item;\n                    return (\n                      <td className=\"border-off\">\n                        <input\n                          name={name}\n                          type=\"checkbox\"\n                          defaultChecked={isChecked}\n                        />\n                        <label>{name}</label>\n                      </td>\n                    );\n                  })}\n                </tr>\n              ) : null}\n            </tbody>\n          </table>\n\n          <div className=\"edit-button-centred\">\n            <ButtonForFilter\n              onClick={saveData}\n              btnText={changeColumns ? \"Save changes\" : \"Edit Table\"}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currencyData: state.dataApi,\n    loaded: state.isLoaded,\n    filter: state.filter,\n    changeColumns: state.changeColumns,\n    showCheckboxColumn: state.showCheckboxColumn,\n  };\n};\n\nexport default connect(mapStateToProps, actions)(CryptoTable);\n","C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\ButtonForFilter\\index.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\TableCell\\index.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\constants\\checkboxes.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\ButtonForFilter\\ButtonForFilter.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\TableCell\\TableCell.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\ItemStatus\\index.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\Favorite\\index.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\ItemStatus\\ItemStatus.js",[],"C:\\Users\\User\\WebstormProjects\\cryptocur\\src\\components\\Favorite\\Favorite.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":18,"column":6,"nodeType":"117","endLine":18,"endColumn":8,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":28,"column":6,"nodeType":"117","endLine":28,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":84,"column":5,"nodeType":"127","messageId":"128","endLine":84,"endColumn":17},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'receiveData'. Either include it or remove the dependency array. If 'receiveData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["132"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [receiveData]",{"range":"137","text":"138"},"Update the dependencies array to be: [id]",{"range":"139","text":"140"},[414,416],"[receiveData]",[763,765],"[id]"]